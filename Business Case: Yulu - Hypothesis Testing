{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8701895,"sourceType":"datasetVersion","datasetId":5219066}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-20T02:37:46.682395Z","iopub.execute_input":"2024-06-20T02:37:46.682783Z","iopub.status.idle":"2024-06-20T02:37:47.156839Z","shell.execute_reply.started":"2024-06-20T02:37:46.682754Z","shell.execute_reply":"2024-06-20T02:37:47.155214Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"About YULU :\nElectrics Bicyles Provider for Local Use. It basically provides a two-wheeler electric vehicle services in Bengaluru, Mumbai, Navi Mumbai, Delhi and Gurugram. Yulu operates 25,000 dockless shared EVs and has 4 million users!","metadata":{}},{"cell_type":"markdown","source":"About The Data\nThis dataset provides insights into the usage patterns of YULU bike sharing services. It includes a variety of factors such as weather conditions, time, and user type, which could influence bike rental behaviors.\n\nTarget Columns\n\nCasual: Count of Casual Users\n\nRegistered: Count of Registered Users\n\nCount : Casual + Registered\n\nNote on Registration: YULU's policy requires a refundable security deposit of Rs 100 for registration. This aspect could influence user decisions to register and use the service regularly.\n\nTemperature Columns\n\ntemp: Ambient temperature as measured by standard devices, in Celsius.\n\natemp: 'Feels like' temperature, considering factors like humidity and wind, in Celsius.\nColumn Profiling:\n\ndatetime: Date and time of the bike rental.\n\nseason: Categorical variable representing the season (1: Spring, 2: Summer, 3: Fall, 4: Winter).\n\nholiday: Indicates if the day is a public holiday (1: Holiday, 0: Non-holiday).\n\nworkingday: Identifies working days (1: Working day, 0: Weekend or holiday).\n\nweather: Categorical variable representing weather conditions:\n\n1: Clear, few clouds, partly cloudy.\n\n2: Mist + cloudy, mist + broken clouds, mist + few clouds.\n\n3: Light snow, light rain + thunderstorm + scattered clouds, light rain + scattered clouds.\n\n4: Heavy rain + ice pellets + thunderstorm + mist, snow + fog.\nhumidity: Relative humidity in percentage.\n\nwindspeed: Wind speed in km/h.\n\ncount: Total count of rented bikes, including both casual and registered users.","metadata":{}},{"cell_type":"markdown","source":"So, The company wants to know:\n\nWhich variables are significant in predicting the demand for shared electric cycles in the Indian market?\nHow well those variables describe the electric cycle demands\nSo just starting here with basic rituals to understand the data.","metadata":{}},{"cell_type":"markdown","source":"Concept Used:\n\nBi-Variate Analysis\n2-sample t-test: testing for difference across populations\nANNOVA\nChi-square","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\n\n# Hypothesis testing\nimport scipy.stats as stats\nfrom scipy.stats import ttest_ind,norm,stats,chi2_contingency,levene,shapiro,kruskal,f_oneway\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:37:52.690215Z","iopub.execute_input":"2024-06-20T02:37:52.690735Z","iopub.status.idle":"2024-06-20T02:37:53.479217Z","shell.execute_reply.started":"2024-06-20T02:37:52.690704Z","shell.execute_reply":"2024-06-20T02:37:53.477798Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:37:57.785906Z","iopub.execute_input":"2024-06-20T02:37:57.786322Z","iopub.status.idle":"2024-06-20T02:37:57.796025Z","shell.execute_reply.started":"2024-06-20T02:37:57.786291Z","shell.execute_reply":"2024-06-20T02:37:57.794575Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df=pd.read_csv(r\"/kaggle/input/bike-sharing/bike_sharing.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:00.997454Z","iopub.execute_input":"2024-06-20T02:38:00.997844Z","iopub.status.idle":"2024-06-20T02:38:01.050056Z","shell.execute_reply.started":"2024-06-20T02:38:00.997814Z","shell.execute_reply":"2024-06-20T02:38:01.048452Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:04.487473Z","iopub.execute_input":"2024-06-20T02:38:04.487906Z","iopub.status.idle":"2024-06-20T02:38:04.522313Z","shell.execute_reply.started":"2024-06-20T02:38:04.487870Z","shell.execute_reply":"2024-06-20T02:38:04.520981Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:07.720111Z","iopub.execute_input":"2024-06-20T02:38:07.720527Z","iopub.status.idle":"2024-06-20T02:38:07.774084Z","shell.execute_reply.started":"2024-06-20T02:38:07.720496Z","shell.execute_reply":"2024-06-20T02:38:07.772788Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:11.040824Z","iopub.execute_input":"2024-06-20T02:38:11.041234Z","iopub.status.idle":"2024-06-20T02:38:11.068601Z","shell.execute_reply.started":"2024-06-20T02:38:11.041203Z","shell.execute_reply":"2024-06-20T02:38:11.067189Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.shape[0]","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:14.028462Z","iopub.execute_input":"2024-06-20T02:38:14.028841Z","iopub.status.idle":"2024-06-20T02:38:14.036877Z","shell.execute_reply.started":"2024-06-20T02:38:14.028812Z","shell.execute_reply":"2024-06-20T02:38:14.035560Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.shape[1]","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:17.269213Z","iopub.execute_input":"2024-06-20T02:38:17.269602Z","iopub.status.idle":"2024-06-20T02:38:17.278337Z","shell.execute_reply.started":"2024-06-20T02:38:17.269573Z","shell.execute_reply":"2024-06-20T02:38:17.277084Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# extracting date and time from datetime and deleting datetime.\nraw_df['datetime']=pd.to_datetime(raw_df['datetime'])\nraw_df['year']=raw_df['datetime'].dt.year\nraw_df['month']=raw_df['datetime'].dt.month","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:19.214985Z","iopub.execute_input":"2024-06-20T02:38:19.215402Z","iopub.status.idle":"2024-06-20T02:38:19.236327Z","shell.execute_reply.started":"2024-06-20T02:38:19.215370Z","shell.execute_reply":"2024-06-20T02:38:19.235066Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df=raw_df.drop(columns=['datetime'])","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:22.341073Z","iopub.execute_input":"2024-06-20T02:38:22.342069Z","iopub.status.idle":"2024-06-20T02:38:22.352325Z","shell.execute_reply.started":"2024-06-20T02:38:22.342027Z","shell.execute_reply":"2024-06-20T02:38:22.351032Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:24.451820Z","iopub.execute_input":"2024-06-20T02:38:24.452251Z","iopub.status.idle":"2024-06-20T02:38:24.467515Z","shell.execute_reply.started":"2024-06-20T02:38:24.452219Z","shell.execute_reply":"2024-06-20T02:38:24.466048Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def year_month(raw_df,y,m):\n    a=raw_df[y].value_counts()\n    b=raw_df[m].value_counts()\n    print(\"year value count\",a,\"\\n\")\n    print(\"************************\")\n    print(\"month value count\",b)\nyear_month(raw_df,\"year\",\"month\")","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:27.358016Z","iopub.execute_input":"2024-06-20T02:38:27.359165Z","iopub.status.idle":"2024-06-20T02:38:27.370488Z","shell.execute_reply.started":"2024-06-20T02:38:27.359117Z","shell.execute_reply":"2024-06-20T02:38:27.369046Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:30.672849Z","iopub.execute_input":"2024-06-20T02:38:30.674080Z","iopub.status.idle":"2024-06-20T02:38:30.685482Z","shell.execute_reply.started":"2024-06-20T02:38:30.674037Z","shell.execute_reply":"2024-06-20T02:38:30.684247Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.describe().T","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:34.364196Z","iopub.execute_input":"2024-06-20T02:38:34.364607Z","iopub.status.idle":"2024-06-20T02:38:34.420069Z","shell.execute_reply.started":"2024-06-20T02:38:34.364575Z","shell.execute_reply":"2024-06-20T02:38:34.418908Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Observation of shape of data: The dataset contains 10886 rows and 12 columns\n\n","metadata":{}},{"cell_type":"markdown","source":"Data Types of All the Attributes:\n\nThe dataset primarily consists of numeric (int64 and float64) and one object type (datetime) columns.\n\nThe 'datetime' column is in object format and should ideally be converted to a datetime data type for better analysis.\n\nMissing Value Detection:\n\nThe initial overview indicated that there are no missing values in any of the columns. However, a deeper check for missing or null values can be performed for assurance.","metadata":{}},{"cell_type":"code","source":"categorical_columns = ['season', 'holiday', 'workingday', 'weather']\nraw_df[categorical_columns] = raw_df[categorical_columns].astype('category')","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:38.760698Z","iopub.execute_input":"2024-06-20T02:38:38.761159Z","iopub.status.idle":"2024-06-20T02:38:38.774452Z","shell.execute_reply.started":"2024-06-20T02:38:38.761118Z","shell.execute_reply":"2024-06-20T02:38:38.773091Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"raw_df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:41.324616Z","iopub.execute_input":"2024-06-20T02:38:41.325055Z","iopub.status.idle":"2024-06-20T02:38:41.346375Z","shell.execute_reply.started":"2024-06-20T02:38:41.325017Z","shell.execute_reply":"2024-06-20T02:38:41.344829Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Conversion of Categorical Attributes to 'Category':\n\nWe haven't yet converted categorical variables like 'season', 'holiday', 'workingday', and 'weather' to 'category' data type. This conversion can optimize memory usage and is beneficial for certain types of analysis.","metadata":{}},{"cell_type":"code","source":"# Setting the aesthetics for the plots\nsns.set(style=\"whitegrid\")\n\n# Continuous Variables\ncontinuous_variables = ['temp', 'atemp', 'humidity', 'windspeed', 'casual', 'registered', 'count']\n\n# Plotting distribution plots for continuous variables\nfig, axes = plt.subplots(nrows=4, ncols=2, figsize=(15, 20))\naxes = axes.flatten()  # Flattening the axes array for easy indexing\n\nfor i, col in enumerate(continuous_variables):\n    sns.histplot(raw_df[col], ax=axes[i], kde=True)\n    axes[i].set_title(f'Distribution of {col}', fontsize=14)\n    axes[i].set_xlabel(col)\n    axes[i].set_ylabel('Frequency')\n\n# Remove the extra subplot (if the number of plots is odd)\nif len(continuous_variables) % 2 != 0:\n    fig.delaxes(axes[-1])\n\n# Adjust layout\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:45.276255Z","iopub.execute_input":"2024-06-20T02:38:45.276779Z","iopub.status.idle":"2024-06-20T02:38:49.874025Z","shell.execute_reply.started":"2024-06-20T02:38:45.276740Z","shell.execute_reply":"2024-06-20T02:38:49.872566Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Temperature (temp) and 'Feels Like' Temperature (atemp): Both show similar distributions, indicating a reasonable spread across different temperatures.\n\nHumidity (humidity): The distribution is somewhat uniform but with a slight increase in frequency at higher humidity levels.\n\nWind Speed (windspeed): Most of the data points are clustered at lower wind speeds, indicating that high wind speeds are less common.\n\nCasual (casual): The distribution is right-skewed, suggesting that there are many instances with few casual users and fewer instances with a large number of casual users.\n\nRegistered (registered): Similar to 'casual', but with a slightly less pronounced right skew. This indicates a higher overall usage by registered users.\n\nTotal Count (count): Reflects the combined effect of 'casual' and 'registered', showing a right-skewed distribution indicating more instances of lower total usage.","metadata":{}},{"cell_type":"code","source":"# Categorical Variables\ncategorical_variables = ['season', 'holiday', 'workingday', 'weather']\n\n# Plotting count plots for categorical variables\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(15, 10))\naxes = axes.flatten()  # Flattening the axes array for easy indexing\n\nfor i, col in enumerate(categorical_variables):\n    sns.countplot(x=col, data=raw_df, ax=axes[i])\n    axes[i].set_title(f'Count of {col}', fontsize=14)\n    axes[i].set_xlabel(col)\n    axes[i].set_ylabel('Count')\n\n# Adjust layout\nplt.tight_layout()\nplt.show()\n                      ","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:38:57.338889Z","iopub.execute_input":"2024-06-20T02:38:57.339358Z","iopub.status.idle":"2024-06-20T02:38:58.569253Z","shell.execute_reply.started":"2024-06-20T02:38:57.339323Z","shell.execute_reply":"2024-06-20T02:38:58.568056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Categorical Variables:\n\nSeason (season): The dataset seems to have a relatively balanced distribution across different seasons.\n\nHoliday (holiday): There are significantly fewer days classified as holidays compared to non-holidays.\n\nWorking Day (workingday): More days are classified as working days than non-working days.\n\nWeather (weather): Most days fall into the first two weather categories (clear/few clouds and \nmist/cloudy), with very few instances of the more severe weather conditions (categories 3 and 4).","metadata":{}},{"cell_type":"markdown","source":"# Bivariate Analysis: Exploring relationships between important categorical variables and 'count'","metadata":{}},{"cell_type":"code","source":"season_mapping={1:'Spring',2:'Summer',3:'Fall',4:'Winter'}\n\nweather_mapping={\n    1:'Clear/Few clouds',\n    2:'Mist/Cloudy',\n    3:'Light Snow/Rain',\n    4:'Heavy Rain/Snow+Fog'\n}\n\nplt.figure(figsize=(10,6))\nsns.boxplot(x='workingday',y='count',data=raw_df)\nplt.title('Count of Bikes VS working day',fontsize=14)\nplt.xlabel('Working Day (0: No, 1: Yes)')\nplt.ylabel('Count of Bikes')\nplt.show()\n\n\nplt.figure(figsize=(10,6))\nsns.boxplot(x='season',y='count',data=raw_df)\nplt.title('Count of Bike Vs Season')\nplt.xlabel('Season')\nplt.ylabel('Cont of Bikes')\nplt.xticks(ticks=[0, 1, 2, 3], labels=season_mapping.values())  # Renaming x-axis labels for seasons\nplt.show()\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(x='weather', y='count', data=raw_df)\nplt.title('Count of Bikes vs Weather', fontsize=14)\nplt.xlabel('Weather')\nplt.ylabel('Bike Count')\nplt.xticks(ticks=[0, 1, 2, 3], labels=weather_mapping.values())  # Renaming x-axis labels for weather\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:39:08.135738Z","iopub.execute_input":"2024-06-20T02:39:08.136191Z","iopub.status.idle":"2024-06-20T02:39:09.004010Z","shell.execute_reply.started":"2024-06-20T02:39:08.136157Z","shell.execute_reply":"2024-06-20T02:39:09.002797Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Summary**:\nThe EDA revealed valuable insights into the factors influencing bike rental demand. Seasonal changes, weather conditions, and whether a day is a working day significantly impact bike usage. The data also indicated potential areas for further investigation, such as the reasons behind the outliers in bike rental counts.","metadata":{}},{"cell_type":"markdown","source":"**Hypothesis Testing** \nTo conduct a 2-sample t-test to evaluate if there's a significant difference in the number of electric cycles rented on working days versus non-working days, we'll follow these steps:\n\nHypothesis for 2-Sample T-Test:\n\nNull Hypothesis (H0): The mean number of electric cycles rented is the same on working days and non-working days.\n\nAlternative Hypothesis (H1): The mean number of electric cycles rented is different on working days compared to non-working days.\n\nAssumptions for the Test:\n\nThe samples are independent.\n\nThe samples are randomly drawn from the population.\n\nThe data follows a normal distribution, or the sample size is large enough to apply the Central Limit Theorem.\n\nTest Procedure: Separate the counts of rented cycles into two groups based on whether the day is a working day or not. \n\nPerform the 2-sample t-test to compare the means of these two groups. \n\nEvaluate the p-value to determine if the result is statistically significant (typically using a significance level of 0.05).","metadata":{}},{"cell_type":"code","source":"working_day_count=raw_df[raw_df['workingday']==1]['count']\nnon_working_day_count=raw_df[raw_df['workingday']==0]['count']\n\nt_stats,p_value=ttest_ind(working_day_count,non_working_day_count)\n\nt_stats,p_value","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:39:17.362084Z","iopub.execute_input":"2024-06-20T02:39:17.362467Z","iopub.status.idle":"2024-06-20T02:39:17.382260Z","shell.execute_reply.started":"2024-06-20T02:39:17.362437Z","shell.execute_reply":"2024-06-20T02:39:17.380988Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**T-Statistic**: 1.21 **P-Value**: Approximately 0.226\n\n**Interpretation**:\n\nSince the p-value (0.226) is greater than the typical significance level of 0.05, we fail to reject the null hypothesis. This implies that, based on our sample data, there is not enough evidence to conclude that the mean number of electric cycles rented significantly differs between working days and non-working days.\n\n**Conclusion**:\n\nThe test suggests that the status of the day (whether it is a working day or not) does not have a statistically significant impact on the number of electric cycles rented. However, it is important to consider other factors that might interact with the day's status, such as weather, season, or holidays, which could influence this outcome","metadata":{}},{"cell_type":"markdown","source":"**ANOVA Test:**\nHypothesis: Number of Cycles Rented in Different Seasons\n\nNull Hypothesis (H0): The mean number of electric cycles rented is the same across different seasons.\n\nAlternative Hypothesis (H1): The mean number of electric cycles rented differs across seasons.","metadata":{}},{"cell_type":"code","source":"from scipy.stats import shapiro,levene, f_oneway\n# Check for Normality (Shapiro-Wilk test)\nshapiro_test_seasons={season:shapiro(raw_df[raw_df['season']== season]['count'])\n                     for season in raw_df['season'].cat.categories}\n\n# Check for Equal Variance (Levene's test)\ncount_by_season=[raw_df[raw_df['season']==season]['count']\n                 for season in raw_df['season'].cat.categories]\n\nlevene_test=levene(*count_by_season)\n\nanova_test=f_oneway(*count_by_season)\n\nshapiro_test_seasons,levene_test,anova_test\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-20T02:52:57.744853Z","iopub.execute_input":"2024-06-20T02:52:57.745295Z","iopub.status.idle":"2024-06-20T02:52:57.773699Z","shell.execute_reply.started":"2024-06-20T02:52:57.745263Z","shell.execute_reply":"2024-06-20T02:52:57.772428Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Normality Check (Shapiro-Wilk Test):\n\nFor all seasons, the p-values are extremely low (close to 0). This suggests that the data for each season does not follow a normal distribution.\nEqual Variance Check (Levene's Test):\n\nThe p-value is significantly low (practically 0), indicating that the variances across different seasons are not equal.\nANOVA Test:\n\nThe F-statistic is quite high (236.95), and the p-value is extremely low (close to 0).\nThis result suggests there are significant differences in the mean number of cycles rented across different seasons.","metadata":{}},{"cell_type":"markdown","source":"**Interpretation and Inference:**\n\nDespite the assumptions of normality and equal variance not being fully met, the ANOVA test strongly indicates that the mean number of cycles rented varies significantly across different seasons.\nGiven the large sample size, the ANOVA test remains robust even if the normality assumption is not strictly met.\nThe conclusion is that we reject the null hypothesis (H0) and accept the alternative hypothesis (H1): The number of electric cycles rented is different across seasons.****","metadata":{}},{"cell_type":"markdown","source":"**Hypothesis for ANOVA (Weather Conditions):**\n\nNull Hypothesis (H0): The mean number of electric cycles rented is the same across different weather conditions.\n\nAlternative Hypothesis (H1): The mean number of electric cycles rented differs across weather conditions.","metadata":{}},{"cell_type":"markdown","source":"The shiparo-wilk test for normality encountered an issue b**ecause one or more waether cateogory do not have enough data points (atleast 3 to perform the test).** This situation can rise if certain weather condition is rare in the dataset.\n\nGiven this limitation, **we can still proceed with the ANOVA test for the different weather conditions**, keeping in mind the following:\n\nThe normality assumption may not be fully met for all categories.\nThe ANOVA test is generally robust to violations of normality, especially with large sample sizes.","metadata":{}},{"cell_type":"code","source":"count_by_weather=[raw_df[raw_df['weather']==weather] ['count']\n                 for weather in raw_df['weather'].cat.categories]\nlevene_test=levene(*count_by_weather)\nanova_test=f_oneway(*count_by_weather)\n\nlevene_test,anova_test","metadata":{"execution":{"iopub.status.busy":"2024-06-20T03:09:12.169303Z","iopub.execute_input":"2024-06-20T03:09:12.169692Z","iopub.status.idle":"2024-06-20T03:09:12.186923Z","shell.execute_reply.started":"2024-06-20T03:09:12.169662Z","shell.execute_reply":"2024-06-20T03:09:12.185439Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Equal Variance Check (Levene's Test):**\n\nThe Levene's test resulted in a p-value of approximately 3.504937946833238e-35 , which is significantly low. This suggests that the variances across different weather conditions are not equal.\n\n**ANOVA Test**: The ANOVA test yielded an F-statistic of approximately 65.53, with a very low p-value (5.482069475935669e-42). This indicates a significant difference in the mean number of cycles rented across different weather conditions.","metadata":{}},{"cell_type":"markdown","source":"**Interpretation and Inference:**\n\nDespite the assumption of equal variance not being met, the ANOVA test indicates significant differences in the mean number of cycles rented across different weather conditions.\nGiven the robustness of ANOVA, especially with large sample sizes, we can confidently conclude that the number of electric cycles rented varies significantly with weather conditions.\n**We reject the null hypothesis (H0) and accept the alternative hypothesis (H1): The mean number of electric cycles rented differs across weather conditions.**","metadata":{}},{"cell_type":"markdown","source":"**Chi-Square Test¶**\nHypothesis: to check if weather conditions are dependent on the season.\n\nNull Hypothesis (H0): Weather conditions are independent of the season.\n\nAlternative Hypothesis (H1): Weather conditions are dependent on the season.","metadata":{}},{"cell_type":"markdown","source":"**Test Procedure**:\n\nCreate a contingency table (cross-tabulation) of weather conditions versus seasons.\nPerform the Chi-square test of independence on this table.\nEvaluate the p-value to determine if the result is statistically significant (typically using a significance level of 0.05).","metadata":{}},{"cell_type":"code","source":"from scipy.stats import chi2_contingency\n\ncontingency_table=pd.crosstab(raw_df['season'],raw_df['weather'])\n\nchi2,p_value,dof,expected=chi2_contingency(contingency_table)\n\nchi2,p_value,dof,expected","metadata":{"execution":{"iopub.status.busy":"2024-06-20T03:23:17.926665Z","iopub.execute_input":"2024-06-20T03:23:17.927077Z","iopub.status.idle":"2024-06-20T03:23:17.956023Z","shell.execute_reply.started":"2024-06-20T03:23:17.927045Z","shell.execute_reply":"2024-06-20T03:23:17.954666Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Chi-Square Test Results:\n\nChi-Square Statistic: Approximately 49.16\nP-Value: Approximately 1.549925073686492e-07\nDegrees of Freedom: 9","metadata":{}},{"cell_type":"markdown","source":"**Interpretation:**\n\nThe p-value is significantly low (1.549925073686492e-07), far below the typical significance level of 0.05.\nThis result indicates that the observed frequency distribution of weather conditions across different seasons significantly deviates from what would be expected if they were independent.\nInference:\n\nWe reject the null hypothesis (H0) and accept the alternative hypothesis (H1): Weather conditions are dependent on the season. This implies that the likelihood of experiencing certain types of weather conditions varies with the season, which is a logical outcome considering seasonal weather patterns.","metadata":{}},{"cell_type":"markdown","source":"**Final Conclusions and Recommendations:**\nSeasonal and Weather Considerations: Yulu should consider seasonal and weather variations in their operational and marketing strategies. For example, increasing fleet availability during favorable seasons and weather conditions could boost usage.\nFocus on Working Days: While working days did not show a significant difference in rentals statistically, operational focus during these days might still be beneficial given the slightly higher usage trends.\nData-Driven Decisions: The insights from this analysis should be utilized to make data-driven decisions for resource allocation, marketing campaigns, and strategic planning.\nContinuous Monitoring: Ongoing analysis of usage patterns, especially in response to changes in weather, urban infrastructure, and customer preferences, is recommended.","metadata":{}}]}